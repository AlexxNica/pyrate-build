CC = gcc
CC_FLAGS = -Wall -pedantic
rule compile_c
  command = $CC $CC_FLAGS ${opts} -MMD -MT $out -MF $out.d -c $in -o $out
  description = compile(c) $out
  depfile = $out.d
  deps = gcc

CXX = g++
CXX_FLAGS = -Wall -pedantic
rule compile_cpp
  command = $CXX $CXX_FLAGS ${opts} -MMD -MT $out -MF $out.d -c $in -o $out
  description = compile(cpp) $out
  depfile = $out.d
  deps = gcc

LINKER_EXE = gcc
LINKER_EXE_FLAGS = 
rule link_exe
  command = $LINKER_EXE $LINKER_EXE_FLAGS ${opts} -o $out $in
  description = link(exe) $out

build test_1cfedb0e86f69ad43c2ba451c73bb586.o: compile_cpp test.cpp
build test_bfbd55b5c9a7d832c6f6e0a42a24e686.o: compile_c test.c
build foo.o: compile_cpp foo.cpp
build example11.bin: link_exe test_1cfedb0e86f69ad43c2ba451c73bb586.o test_bfbd55b5c9a7d832c6f6e0a42a24e686.o foo.o
  opts = -lstdc++ -lm
build all: phony example11.bin
